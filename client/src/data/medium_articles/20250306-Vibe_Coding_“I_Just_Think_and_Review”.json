{
  "title": "Vibe Coding: “I Just Think and Review”",
  "url": "https://medium.com/ai-unscripted/vibe-coding-i-just-think-and-review-65cfbc4ccf90",
  "author": "Kenji",
  "publish_date": "Mar 6, 2025",
  "read_time": "3 min read",
  "claps": 0,
  "comments": 0,
  "cover_image_url": "https://miro.medium.com/v2/resize:fit:700/0*r_M1SLgJcsZyPqlm",
  "content": "Member-only story\n\nVibe Coding: “I Just Think and Review”\n\nHow AI-Driven Coding is Changing the Role of Software Engineers\n\nKenji\n\nAI Unscripted\n\nP\nicture this: you’re working on a software feature, and instead of wrestling with lines of code, you simply describe your vision. Moments later, the feature appears, neatly coded by an AI assistant.\n\nYour job? To review, refine, and think strategically. This scenario isn’t a distant future — it’s already here, reshaping how I work and how you might soon work too.\n\nWhen Andrej Karpathy introduced “Vibe Coding” on X, it instantly resonated with my experience.\n\nOver the past five months of using Cursor, I’ve come to understand firsthand that coding has transitioned to a collaborative conversation with intelligent agents.\n\nWhat Exactly is Vibe Coding?\n\nVibe Coding isn’t about automating trivial tasks; it’s about treating AI as a coding partner. AI-driven platforms such as Cursor and Replit allow engineers to delegate complex tasks — from simple frontend tweaks to intricate backend logic — by simply describing what they want.\n\nKarpathy captured it best:\n\nI‘m building a project or webapp, but it’s not really coding — I just see stuff, say stuff, run stuff, and copy paste stuff, and it mostly works.\n\nI‘m building a project or webapp, but it’s not really coding — I just see stuff, say stuff, run stuff, and copy paste stuff, and it mostly works.\n\nThis shift empowers engineers to focus on strategic thinking, enhancing their creativity and freeing them from monotonous implementation details.\n\nHow to Adapt to Vibe Coding\n\nThrough hands-on experience, I’ve identified a few essential approaches to leverage AI-driven coding effectively:\n\nHow the Role of Software Engineers is Shifting\n\nThis evolution isn’t just technological — it’s changing the very essence of what it means to be a software engineer. Thoughtful industry perspectives reflect this transformation:\n\nTwo distinct roles are emerging:\n\nWhat’s Not Changing?\n\nDespite the rise of AI, some skills remain fundamentally human:\n\nWhat Does This Mean for the Future?\n\nThe rise of AI-driven development demands a shift in hiring and training practices. Traditional coding interviews might soon be replaced by evaluations focused on strategic thinking, debugging skills, and the ability to guide AI-driven systems effectively.\n\nThose who cling to traditional methods risk becoming obsolete in this rapidly changing landscape. Karpathy hints at an essential truth: the code itself is becoming less important than the thinking behind it.\n\nAre You Ready to Adapt?\n\nVibe Coding isn’t merely a passing trend — it’s fundamentally reshaping how software develops.\n\n“The real value isn’t in writing code but in knowing exactly what should be built. AI handles the rest, transforming the way we create software.”\n\n“The real value isn’t in writing code but in knowing exactly what should be built. AI handles the rest, transforming the way we create software.”\n\nThe future of software development is already unfolding. If you haven’t yet embraced this new approach, the time to start is now.",
  "scraped_at": "2025-04-07 09:27:09"
}