{
  "title": "Cursor AI: How It Help Me Make My First GitHub Contribution",
  "url": "https://medium.com/@kenji-onisuka/cursor-ai-how-it-help-me-make-my-first-github-contribution-9eda60bbc2b9",
  "author": "Kenji",
  "publish_date": "Oct 18, 2024",
  "read_time": "3 min read",
  "claps": 16,
  "comments": 0,
  "content": "Member-only story\n\nCursor AI: How It Help Me Make My First GitHub Contribution\n\nHow an AI-Driven IDE Can Help Non-Developers Contribute to Open Source\n\nKenji\n\n16\n\nHave you ever thought contributing to open-source projects was beyond your skillset? I did, too.\n\nUntil I discovered an AI-powered IDE called Cursor, which changed how I approached coding. Whether you’re a writer, part-time programmer, or new to coding, AI tools are making coding more accessible than ever\n\nHere’s how Cursor helped me, as a non-developer, make my first contribution to GitHub.\n\nThe Intimidation of Code\n\nCoding can feel daunting for non-developers. Although I’ve always enjoyed logical thinking, I never seriously considered programming. The idea of contributing to a complex open-source project seemed far out of reach—something only experienced developers could manage.\n\nDiscovering Cursor: An AI-Powered IDE\n\nAbout two months ago, I came across Cursor while working on a small weekend project. I’ve written about Cursor before, but this time, it significantly changed how I approached coding. Cursor is an AI-driven integrated development environment (IDE) that goes beyond being a simple code editor — it acts as a coding assistant that explains concepts, suggests improvements, and helps you navigate unfamiliar code. I’m particularly impressed by how seamlessly it integrates AI into its features.\n\nFor someone with limited development experience, Cursor was exactly what I needed to bridge the gap between where I was and where I wanted to be.\n\nFrom Novice to Contributor: My GitHub Journey\n\nWith Cursor’s help, I quickly became more familiar with code structures and added a minor feature to an open-source project. The AI’s ability to provide suggestions and answer my questions about unfamiliar code gave me confidence. It wasn’t long before I had successfully made my first contribution to GitHub. The sense of accomplishment was undeniable, and I knew AI had played a central role in helping me get there.\n\nWriters and Coders: Bridging the Gap\n\nTools like Cursor are breaking down barriers between different professions. Writers, especially those curious about tech, can now use AI-driven tools to better understand the technical aspects of projects without relying solely on technical experts. These platforms help writers grasp coding concepts, review technical documentation, and contribute more meaningfully to tech-related content.\n\nIn this way, AI-powered tools foster cross-disciplinary understanding, empowering professionals to engage with technical subjects that once felt out of reach.\n\nEmbracing the Future of AI Tools\n\nAI-powered tools are reshaping how we approach problem-solving and productivity. For me, AI was a guide that made contributing to open-source projects possible. As these tools continue to evolve, they will simplify complex tasks, enabling more people to contribute to areas they might have previously thought inaccessible.\n\nNow’s the perfect time to take that step — your first breakthrough could be just a few clicks away.\n\nNow’s the perfect time to take that step — your first breakthrough could be just a few clicks away.\n\nEmpowering Your Journey\n\nLooking back on this experience, AI tools have fueled my personal growth, and they can do the same for you. Whether it’s coding or learning new skills, AI is making it easier than ever to get started.\n\nCursor AI: 3 Days In, and Here’s Why I’m Subscribing | by Kenji | Sep, 2024 | Medium",
  "scraped_at": "2025-04-07 08:19:35"
}